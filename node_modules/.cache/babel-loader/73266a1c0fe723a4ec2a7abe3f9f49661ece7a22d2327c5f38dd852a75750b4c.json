{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemko\\\\OneDrive - Otago Polytechnic\\\\01_Courses\\\\10_Studio_03\\\\03_Others\\\\Eco-shop\\\\src\\\\context\\\\Wishlistcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { collection, doc, setDoc, getDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { useUserAuth } from '../context/UserAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WishlistContext = /*#__PURE__*/createContext();\nexport function WishlistContextProvider({\n  children\n}) {\n  _s();\n  const [wishlist, setWishlist] = useState([]);\n  const {\n    user: currentUser\n  } = useUserAuth();\n  useEffect(() => {\n    const fetchWishlist = async () => {\n      if (!currentUser) return;\n      try {\n        const docRef = doc(db, \"wishlist\", currentUser.uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          setWishlist(docSnap.data().items || []);\n        } else {\n          console.log(\"No wishlist items found\");\n        }\n      } catch (e) {\n        console.error(\"Error fetching wishlist items:\", e);\n      }\n    };\n    fetchWishlist();\n  }, [currentUser]);\n  async function addToWishlist(product) {\n    if (!currentUser) {\n      alert(\"You need to log in to add items to your wishlist.\");\n      return;\n    }\n    const userName = currentUser.displayName || currentUser.email;\n    const newWishlistItem = {\n      ...product,\n      userName\n    };\n    try {\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const existingItems = docSnap.data().items || [];\n        const isAlreadyInWishlist = existingItems.some(item => item.productId === product.productId);\n        if (isAlreadyInWishlist) {\n          alert(\"This product is already in your wishlist.\");\n        } else {\n          const updatedItems = [...existingItems, newWishlistItem];\n          await setDoc(docRef, {\n            userId: currentUser.uid,\n            userName,\n            items: updatedItems\n          });\n          setWishlist(updatedItems);\n        }\n      } else {\n        await setDoc(docRef, {\n          userId: currentUser.uid,\n          userName,\n          items: [newWishlistItem]\n        });\n        setWishlist([newWishlistItem]);\n      }\n    } catch (e) {\n      console.error(\"Error adding to wishlist:\", e);\n    }\n  }\n  async function removeFromWishlist(productId) {\n    try {\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const existingItems = docSnap.data().items || [];\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\n        await setDoc(docRef, {\n          ...docSnap.data(),\n          items: updatedItems\n        });\n        setWishlist(updatedItems);\n      }\n    } catch (e) {\n      console.error(\"Error removing from wishlist:\", e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(WishlistContext.Provider, {\n    value: {\n      wishlist,\n      addToWishlist,\n      removeFromWishlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(WishlistContextProvider, \"46h/EI7ROsfbzcRnVeODPGBlvHQ=\", false, function () {\n  return [useUserAuth];\n});\n_c = WishlistContextProvider;\nexport function useWishlistContext() {\n  _s2();\n  return useContext(WishlistContext);\n}\n_s2(useWishlistContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WishlistContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","collection","doc","setDoc","getDoc","deleteDoc","db","useUserAuth","jsxDEV","_jsxDEV","WishlistContext","WishlistContextProvider","children","_s","wishlist","setWishlist","user","currentUser","fetchWishlist","docRef","uid","docSnap","exists","data","items","console","log","e","error","addToWishlist","product","alert","userName","displayName","email","newWishlistItem","existingItems","isAlreadyInWishlist","some","item","productId","updatedItems","userId","removeFromWishlist","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWishlistContext","_s2","$RefreshReg$"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/context/Wishlistcontext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, doc, setDoc, getDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\nconst WishlistContext = createContext();\r\n\r\nexport function WishlistContextProvider({ children }) {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user: currentUser } = useUserAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchWishlist = async () => {\r\n      if (!currentUser) return;\r\n\r\n      try {\r\n        const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setWishlist(docSnap.data().items || []);\r\n        } else {\r\n          console.log(\"No wishlist items found\");\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching wishlist items:\", e);\r\n      }\r\n    };\r\n\r\n    fetchWishlist();\r\n  }, [currentUser]);\r\n\r\n  async function addToWishlist(product) {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    const userName = currentUser.displayName || currentUser.email;\r\n    const newWishlistItem = { ...product, userName };\r\n\r\n    try {\r\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const isAlreadyInWishlist = existingItems.some(item => item.productId === product.productId);\r\n\r\n        if (isAlreadyInWishlist) {\r\n          alert(\"This product is already in your wishlist.\");\r\n        } else {\r\n          const updatedItems = [...existingItems, newWishlistItem];\r\n          await setDoc(docRef, { userId: currentUser.uid, userName, items: updatedItems });\r\n          setWishlist(updatedItems);\r\n        }\r\n      } else {\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: [newWishlistItem] });\r\n        setWishlist([newWishlistItem]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding to wishlist:\", e);\r\n    }\r\n  }\r\n\r\n  async function removeFromWishlist(productId) {\r\n    try {\r\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\r\n\r\n        await setDoc(docRef, { ...docSnap.data(), items: updatedItems });\r\n        setWishlist(updatedItems);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error removing from wishlist:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <WishlistContext.Provider value={{ wishlist, addToWishlist, removeFromWishlist }}>\r\n      {children}\r\n    </WishlistContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWishlistContext() {\r\n  return useContext(WishlistContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}