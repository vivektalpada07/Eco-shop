{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemko\\\\OneDrive - Otago Polytechnic\\\\01_Courses\\\\10_Studio_03\\\\03_Others\\\\Eco-shop\\\\src\\\\components\\\\BeSeller.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\"; // Import Firebase database and storage configuration\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport Footer from \"./Footer\";\nimport HeaderSwitcher from \"./HeaderSwitcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BeSeller = () => {\n  _s();\n  // State variables for handling form inputs\n  const [reason, setReason] = useState(\"\"); // Reason for wanting to be a seller\n  const [image, setImage] = useState(null); // Selected image file\n  const {\n    user\n  } = useUserAuth(); // Access current authenticated user\n\n  // Handle image file selection\n  const handleImageChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]); // Set the selected image file\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    try {\n      let imageUrl = \"\"; // Initialize image URL\n\n      // Upload the image to Firebase Storage and get its URL\n      if (image) {\n        const imageRef = ref(storage, `sellerImages/${user.uid}_${image.name}`);\n        await uploadBytes(imageRef, image); // Upload the image\n        imageUrl = await getDownloadURL(imageRef); // Get the image URL\n      }\n\n      // Create a new document with seller query data\n      const sellerQuery = {\n        reason,\n        userId: user.uid,\n        userName: user.email,\n        submittedAt: new Date(),\n        // Current date and time\n        imageUrl // URL of the uploaded image\n      };\n      await addDoc(collection(db, \"sellerQueries\"), sellerQuery); // Add document to Firestore\n      setReason(\"\"); // Clear the reason input field\n      setImage(null); // Clear the image file\n      alert(\"Your request has been submitted.\"); // Notify user of successful submission\n    } catch (error) {\n      console.error(\"Error submitting request:\", error); // Log any errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Become a Seller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"reason\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Why do you want to be a seller?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: reason,\n          onChange: e => setReason(e.target.value),\n          required: true // Ensure this field is filled out\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload ID Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(BeSeller, \"NdPBuytv7sS2tfRyZ35Ce4Icl28=\", false, function () {\n  return [useUserAuth];\n});\n_c = BeSeller;\nexport default BeSeller;\nvar _c;\n$RefreshReg$(_c, \"BeSeller\");","map":{"version":3,"names":["React","useState","Form","Button","collection","addDoc","db","storage","ref","uploadBytes","getDownloadURL","useUserAuth","Footer","HeaderSwitcher","jsxDEV","_jsxDEV","BeSeller","_s","reason","setReason","image","setImage","user","handleImageChange","e","target","files","handleSubmit","preventDefault","imageUrl","imageRef","uid","name","sellerQuery","userId","userName","email","submittedAt","Date","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","as","rows","value","onChange","required","type","accept","variant","_c","$RefreshReg$"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/components/BeSeller.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\"; // Import Firebase database and storage configuration\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Footer from \"./Footer\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\n\r\nconst BeSeller = () => {\r\n  // State variables for handling form inputs\r\n  const [reason, setReason] = useState(\"\");  // Reason for wanting to be a seller\r\n  const [image, setImage] = useState(null);  // Selected image file\r\n  const { user } = useUserAuth();  // Access current authenticated user\r\n\r\n  // Handle image file selection\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);  // Set the selected image file\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent default form submission behavior\r\n\r\n    try {\r\n      let imageUrl = \"\";  // Initialize image URL\r\n\r\n      // Upload the image to Firebase Storage and get its URL\r\n      if (image) {\r\n        const imageRef = ref(storage, `sellerImages/${user.uid}_${image.name}`);\r\n        await uploadBytes(imageRef, image);  // Upload the image\r\n        imageUrl = await getDownloadURL(imageRef);  // Get the image URL\r\n      }\r\n\r\n      // Create a new document with seller query data\r\n      const sellerQuery = {\r\n        reason,\r\n        userId: user.uid,\r\n        userName: user.email,\r\n        submittedAt: new Date(),  // Current date and time\r\n        imageUrl,  // URL of the uploaded image\r\n      };\r\n\r\n      await addDoc(collection(db, \"sellerQueries\"), sellerQuery);  // Add document to Firestore\r\n      setReason(\"\");  // Clear the reason input field\r\n      setImage(null);  // Clear the image file\r\n      alert(\"Your request has been submitted.\");  // Notify user of successful submission\r\n    } catch (error) {\r\n      console.error(\"Error submitting request:\", error);  // Log any errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <HeaderSwitcher />  {/* Header component that switches based on user role */}\r\n      <h2>Become a Seller</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* Form for submitting a seller request */}\r\n        <Form.Group controlId=\"reason\">\r\n          <Form.Label>Why do you want to be a seller?</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={reason}\r\n            onChange={(e) => setReason(e.target.value)}\r\n            required  // Ensure this field is filled out\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n          <Form.Label>Upload ID Image</Form.Label>\r\n          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImageChange} required />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <Footer />  {/* Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeSeller;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}