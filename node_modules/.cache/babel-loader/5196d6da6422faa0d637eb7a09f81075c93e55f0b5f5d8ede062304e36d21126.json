{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemko\\\\OneDrive - Otago Polytechnic\\\\01_Courses\\\\10_Studio_03\\\\03_Others\\\\Eco-shop\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AdminHeader from './Adminheader';\nimport Footer from './Footer';\nimport UserProfile from './UserProfile';\nimport '../css/AdminDashboard.css';\nimport CheckoutService from '../context/CheckoutServices'; // Service for fetching checkout data from Firestore\nimport FBDataService from '../context/FBService'; // Service for fetching user data from Firestore\nimport { useUserAuth } from '../context/UserAuthContext'; // Hook for getting the currently logged-in user\nimport Reviews from './Reviews'; // Reviews component for displaying user feedback or ratings\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [totalServerFees, setTotalServerFees] = useState(0); // State to store the total server fees\n  const [totalProductsSold, setTotalProductsSold] = useState(0); // State to store the total number of products sold\n  const {\n    user\n  } = useUserAuth(); // Access the current authenticated user using the custom hook\n  const [userName, setUserName] = useState(''); // State to store the current user's name\n\n  useEffect(() => {\n    // Function to fetch checkout data and calculate total server fees and products sold\n    const fetchCheckoutData = async () => {\n      try {\n        const querySnapshot = await CheckoutService.getAllCheckouts(); // Get all checkout documents from Firestore\n\n        let totalFees = 0;\n        let totalProducts = 0;\n\n        // Iterate over each checkout document to calculate total fees and count products sold\n        querySnapshot.docs.forEach(doc => {\n          const checkoutData = doc.data();\n\n          // Add server fees, ensuring to handle missing or undefined data\n          const serverFee = parseFloat(checkoutData.serverFee || 0);\n          totalFees += serverFee;\n\n          // Count the number of products in each checkout\n          const itemsSold = checkoutData.items ? checkoutData.items.length : 0;\n          totalProducts += itemsSold;\n        });\n\n        // Update state with the calculated totals\n        setTotalServerFees(totalFees.toFixed(2)); // Set total server fees, formatted to 2 decimal places\n        setTotalProductsSold(totalProducts); // Set total number of products sold\n      } catch (error) {\n        console.error(\"Error fetching checkout data: \", error); // Log any errors\n      }\n    };\n\n    // Function to fetch the name of the currently logged-in user\n    const fetchUserName = async () => {\n      try {\n        if (user) {\n          const userDoc = await FBDataService.getData(user.uid); // Fetch user document from Firestore using UID\n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            setUserName(userData.name); // Set the user's name in state\n          } else {\n            console.log(\"No such user!\"); // Log if no user is found with the given UID\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user data: ', error); // Log any errors during user data fetching\n      }\n    };\n\n    // Fetch checkout data and user name when the component mounts\n    fetchCheckoutData();\n    fetchUserName();\n  }, [user]); // Re-run when the user state changes (e.g., when the user logs in/out)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"welcome-message\",\n      children: [\"Welcome to the Admin Dashboard, \", userName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"summary-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: \"Total Server Fees \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), \"$\", totalServerFees, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"summary-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: \"Total Products Sold \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), totalProductsSold, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Reviews, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n_s(AdminDashboard, \"e7qPoNXhsc4FHxHyxolhOlTKs4o=\", false, function () {\n  return [useUserAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","AdminHeader","Footer","UserProfile","CheckoutService","FBDataService","useUserAuth","Reviews","jsxDEV","_jsxDEV","AdminDashboard","_s","totalServerFees","setTotalServerFees","totalProductsSold","setTotalProductsSold","user","userName","setUserName","fetchCheckoutData","querySnapshot","getAllCheckouts","totalFees","totalProducts","docs","forEach","doc","checkoutData","data","serverFee","parseFloat","itemsSold","items","length","toFixed","error","console","fetchUserName","userDoc","getData","uid","exists","userData","name","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AdminHeader from './Adminheader';\r\nimport Footer from './Footer';\r\nimport UserProfile from './UserProfile';\r\nimport '../css/AdminDashboard.css';\r\nimport CheckoutService from '../context/CheckoutServices'; // Service for fetching checkout data from Firestore\r\nimport FBDataService from '../context/FBService'; // Service for fetching user data from Firestore\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Hook for getting the currently logged-in user\r\nimport Reviews from './Reviews'; // Reviews component for displaying user feedback or ratings\r\n\r\nfunction AdminDashboard() {\r\n    const [totalServerFees, setTotalServerFees] = useState(0); // State to store the total server fees\r\n    const [totalProductsSold, setTotalProductsSold] = useState(0); // State to store the total number of products sold\r\n    const { user } = useUserAuth(); // Access the current authenticated user using the custom hook\r\n    const [userName, setUserName] = useState(''); // State to store the current user's name\r\n\r\n    useEffect(() => {\r\n        // Function to fetch checkout data and calculate total server fees and products sold\r\n        const fetchCheckoutData = async () => {\r\n            try {\r\n                const querySnapshot = await CheckoutService.getAllCheckouts(); // Get all checkout documents from Firestore\r\n                \r\n                let totalFees = 0;\r\n                let totalProducts = 0;\r\n\r\n                // Iterate over each checkout document to calculate total fees and count products sold\r\n                querySnapshot.docs.forEach(doc => {\r\n                    const checkoutData = doc.data();\r\n                    \r\n                    // Add server fees, ensuring to handle missing or undefined data\r\n                    const serverFee = parseFloat(checkoutData.serverFee || 0); \r\n                    totalFees += serverFee;\r\n\r\n                    // Count the number of products in each checkout\r\n                    const itemsSold = checkoutData.items ? checkoutData.items.length : 0;\r\n                    totalProducts += itemsSold;\r\n                });\r\n\r\n                // Update state with the calculated totals\r\n                setTotalServerFees(totalFees.toFixed(2)); // Set total server fees, formatted to 2 decimal places\r\n                setTotalProductsSold(totalProducts); // Set total number of products sold\r\n            } catch (error) {\r\n                console.error(\"Error fetching checkout data: \", error); // Log any errors\r\n            }\r\n        };\r\n\r\n        // Function to fetch the name of the currently logged-in user\r\n        const fetchUserName = async () => {\r\n            try {\r\n                if (user) {\r\n                    const userDoc = await FBDataService.getData(user.uid); // Fetch user document from Firestore using UID\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUserName(userData.name); // Set the user's name in state\r\n                    } else {\r\n                        console.log(\"No such user!\"); // Log if no user is found with the given UID\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching user data: ', error); // Log any errors during user data fetching\r\n            }\r\n        };\r\n\r\n        // Fetch checkout data and user name when the component mounts\r\n        fetchCheckoutData();\r\n        fetchUserName();\r\n    }, [user]); // Re-run when the user state changes (e.g., when the user logs in/out)\r\n\r\n    return (\r\n      <div className='main-content'>\r\n        <AdminHeader /> {/* Renders the admin dashboard header */}\r\n        <h2 className='welcome-message'>Welcome to the Admin Dashboard, {userName}!</h2> {/* Display a personalized welcome message */}\r\n        <div className=\"content\">\r\n          <div className=\"user-profile\"><UserProfile /></div> {/* Displays the user profile */}\r\n          <div className=\"dashboard-summary\">\r\n            <h3 className='summary-box'>\r\n              <p className=\"text\">Total Server Fees </p>${totalServerFees} {/* Displays the total server fees */}\r\n            </h3>\r\n            <h3 className='summary-box'>\r\n              <p className=\"text\">Total Products Sold </p>{totalProductsSold} {/* Displays the total number of products sold */}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <Reviews /> {/* Displays reviews or feedback in the admin dashboard */}\r\n      </div>\r\n    );\r\n}\r\n  \r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}