{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemko\\\\OneDrive - Otago Polytechnic\\\\01_Courses\\\\10_Studio_03\\\\03_Others\\\\Eco-shop\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport GoogleButton from \"react-google-button\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport FBDataService from \"../context/FBService\"; // Service to fetch user data from Firebase\nimport '../css/Login.css'; // Custom CSS for login page\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\"); // State for email input\n  const [password, setPassword] = useState(\"\"); // State for password input\n  const [error, setError] = useState(\"\"); // State for error messages\n  const [image, setImage] = useState(\"\"); // State for storing the login image URL\n  const {\n    logIn,\n    googleSignIn\n  } = useUserAuth(); // Destructure login functions from context\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Initialize Firebase Storage to get images\n  const storage = getStorage();\n  useEffect(() => {\n    // Function to fetch the login image from Firebase Storage\n    const fetchImage = async () => {\n      try {\n        // Reference to the login image file in Firebase Storage\n        const imageRef = ref(storage, \"images/login.png\");\n\n        // Get the download URL for the image\n        const url = await getDownloadURL(imageRef);\n\n        // Set the image URL to the state for rendering\n        setImage(url);\n      } catch (error) {\n        console.error(\"Error fetching image:\", error); // Log errors if the image fetch fails\n      }\n    };\n    fetchImage(); // Call the function to fetch the image on component mount\n  }, [storage]);\n\n  // Handle role-based navigation after login\n  const handleRoleBasedRedirect = async uid => {\n    try {\n      const userDoc = await FBDataService.getData(uid); // Fetch user data based on UID\n      if (userDoc.exists) {\n        const userRole = userDoc.data().role;\n        // Redirect based on user role\n        if (userRole === \"admin\") {\n          navigate(\"/admin\");\n        } else if (userRole === \"seller\") {\n          navigate(\"/seller\");\n        } else if (userRole === \"customer\") {\n          navigate(\"/customer\");\n        } else {\n          setError(\"Role not recognized.\"); // Handle unknown roles\n        }\n      } else {\n        setError(\"User data not found.\"); // Handle missing user data\n      }\n    } catch (error) {\n      setError(\"Error fetching user data.\"); // Handle errors during user data fetch\n    }\n  };\n\n  // Handle form submission for email/password login\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setError(\"\"); // Clear any existing error messages\n    try {\n      const userCredential = await logIn(email, password); // Attempt to log in with provided credentials\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect based on user role\n    } catch (err) {\n      setError(err.message); // Display error message if login fails\n    }\n  };\n\n  // Handle Google sign-in\n  const handleGoogleSignIn = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    try {\n      const userCredential = await googleSignIn(); // Attempt Google sign-in\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect based on user role\n    } catch (error) {\n      setError(error.message); // Display error message if Google sign-in fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-section\",\n          children: image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Login\",\n            className: \"login-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading Image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 box\",\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicEmail\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Email address\",\n                  onChange: e => setEmail(e.target.value) // Update email state on change\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicPassword\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  onChange: e => setPassword(e.target.value) // Update password state on change\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: \"Log In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n                className: \"g-btn\",\n                type: \"dark\",\n                onClick: handleGoogleSignIn // Handle Google sign-in\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 box mt-3 text-center\",\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 40\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n};\n_s(Login, \"Pukgq/yMdlwB+QhZQbawaceXdsc=\", false, function () {\n  return [useUserAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","Form","Alert","Button","GoogleButton","useUserAuth","Header","Footer","FBDataService","getDownloadURL","getStorage","ref","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","error","setError","image","setImage","logIn","googleSignIn","navigate","storage","fetchImage","imageRef","url","console","handleRoleBasedRedirect","uid","userDoc","getData","exists","userRole","data","role","handleSubmit","e","preventDefault","userCredential","user","err","message","handleGoogleSignIn","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","variant","onSubmit","Group","controlId","Control","type","placeholder","onChange","target","value","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport FBDataService from \"../context/FBService\"; // Service to fetch user data from Firebase\r\nimport '../css/Login.css'; // Custom CSS for login page\r\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\"); // State for email input\r\n  const [password, setPassword] = useState(\"\"); // State for password input\r\n  const [error, setError] = useState(\"\"); // State for error messages\r\n  const [image, setImage] = useState(\"\"); // State for storing the login image URL\r\n  const { logIn, googleSignIn } = useUserAuth(); // Destructure login functions from context\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  // Initialize Firebase Storage to get images\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the login image from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        // Reference to the login image file in Firebase Storage\r\n        const imageRef = ref(storage, \"images/login.png\"); \r\n\r\n        // Get the download URL for the image\r\n        const url = await getDownloadURL(imageRef);\r\n\r\n        // Set the image URL to the state for rendering\r\n        setImage(url);\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error); // Log errors if the image fetch fails\r\n      }\r\n    };\r\n\r\n    fetchImage(); // Call the function to fetch the image on component mount\r\n  }, [storage]);\r\n\r\n  // Handle role-based navigation after login\r\n  const handleRoleBasedRedirect = async (uid) => {\r\n    try {\r\n      const userDoc = await FBDataService.getData(uid); // Fetch user data based on UID\r\n      if (userDoc.exists) {\r\n        const userRole = userDoc.data().role;\r\n        // Redirect based on user role\r\n        if (userRole === \"admin\") {\r\n          navigate(\"/admin\");\r\n        } else if (userRole === \"seller\") {\r\n          navigate(\"/seller\");\r\n        } else if (userRole === \"customer\") {\r\n          navigate(\"/customer\");\r\n        } else {\r\n          setError(\"Role not recognized.\"); // Handle unknown roles\r\n        }\r\n      } else {\r\n        setError(\"User data not found.\"); // Handle missing user data\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error fetching user data.\"); // Handle errors during user data fetch\r\n    }\r\n  };\r\n\r\n  // Handle form submission for email/password login\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    setError(\"\"); // Clear any existing error messages\r\n    try {\r\n      const userCredential = await logIn(email, password); // Attempt to log in with provided credentials\r\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect based on user role\r\n    } catch (err) {\r\n      setError(err.message); // Display error message if login fails\r\n    }\r\n  };\r\n\r\n  // Handle Google sign-in\r\n  const handleGoogleSignIn = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    try {\r\n      const userCredential = await googleSignIn(); // Attempt Google sign-in\r\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect based on user role\r\n    } catch (error) {\r\n      setError(error.message); // Display error message if Google sign-in fails\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header /> {/* Display the page header */}\r\n      <div className=\"main-content\">\r\n        <h2>Login</h2> {/* Page heading */}\r\n        <div className=\"login-container\">\r\n          <div className=\"image-section\">\r\n            {/* Display the fetched image or a loading message */}\r\n            {image ? (\r\n              <img src={image} alt=\"Login\" className=\"login-image\" />\r\n            ) : (\r\n              <p>Loading Image...</p>\r\n            )}\r\n          </div>\r\n          <div className=\"form-section\">\r\n            <div className=\"p-4 box\">\r\n              {error && <Alert variant=\"danger\">{error}</Alert>} {/* Show error alert if there's any */}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange={(e) => setEmail(e.target.value)} // Update email state on change\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => setPassword(e.target.value)} // Update password state on change\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Log In\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              <hr />\r\n              <div>\r\n                <GoogleButton\r\n                  className=\"g-btn\"\r\n                  type=\"dark\"\r\n                  onClick={handleGoogleSignIn} // Handle Google sign-in\r\n                />\r\n              </div>\r\n              <div className=\"p-4 box mt-3 text-center\">\r\n                Don't have an account? <Link to=\"/signup\">Sign up</Link> {/* Link to sign-up page */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer /> {/* Display the page footer */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}