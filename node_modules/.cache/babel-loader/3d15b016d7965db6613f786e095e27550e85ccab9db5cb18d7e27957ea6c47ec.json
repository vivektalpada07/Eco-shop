{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemko\\\\OneDrive - Otago Polytechnic\\\\01_Courses\\\\10_Studio_03\\\\03_Others\\\\Eco-shop\\\\src\\\\context\\\\Cartcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { collection, doc, setDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { useUserAuth } from '../context/UserAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartContextProvider({\n  children\n}) {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const {\n    user: currentUser\n  } = useUserAuth();\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      if (!currentUser) return;\n      try {\n        const docRef = doc(db, \"cart\", currentUser.uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          setCartItems(docSnap.data().items || []);\n        } else {\n          console.log(\"No cart items found\");\n        }\n      } catch (e) {\n        console.error(\"Error fetching cart items:\", e);\n      }\n    };\n    fetchCartItems();\n  }, [currentUser]);\n  async function addToCart(product) {\n    if (!currentUser) {\n      alert(\"You need to log in to add items to the cart.\");\n      return;\n    }\n    const userName = currentUser.displayName || currentUser.email;\n    const newCartItem = {\n      ...product,\n      userName\n    };\n    try {\n      const docRef = doc(db, \"cart\", currentUser.uid);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const existingItems = docSnap.data().items || [];\n        const isAlreadyInCart = existingItems.some(item => item.productId === product.productId);\n        if (isAlreadyInCart) {\n          alert(\"This product is already in your cart.\");\n          return;\n        }\n        const updatedItems = [...existingItems, newCartItem];\n        await setDoc(docRef, {\n          userId: currentUser.uid,\n          userName,\n          items: updatedItems\n        });\n        setCartItems(updatedItems);\n      } else {\n        await setDoc(docRef, {\n          userId: currentUser.uid,\n          userName,\n          items: [newCartItem]\n        });\n        setCartItems([newCartItem]);\n      }\n    } catch (e) {\n      console.error(\"Error adding to cart:\", e);\n    }\n  }\n  async function removeFromCart(productId) {\n    try {\n      const docRef = doc(db, \"cart\", currentUser.uid);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const existingItems = docSnap.data().items || [];\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\n        await setDoc(docRef, {\n          ...docSnap.data(),\n          items: updatedItems\n        });\n        setCartItems(updatedItems);\n      }\n    } catch (e) {\n      console.error(\"Error removing from cart:\", e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(CartContextProvider, \"RF54u/qbomD+NTNVBwMxra0ObAo=\", false, function () {\n  return [useUserAuth];\n});\n_c = CartContextProvider;\nexport function useCartContext() {\n  _s2();\n  return useContext(CartContext);\n}\n_s2(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","collection","doc","setDoc","getDoc","db","useUserAuth","jsxDEV","_jsxDEV","CartContext","CartContextProvider","children","_s","cartItems","setCartItems","user","currentUser","fetchCartItems","docRef","uid","docSnap","exists","data","items","console","log","e","error","addToCart","product","alert","userName","displayName","email","newCartItem","existingItems","isAlreadyInCart","some","item","productId","updatedItems","userId","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCartContext","_s2","$RefreshReg$"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/context/Cartcontext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartContextProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const { user: currentUser } = useUserAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      if (!currentUser) return;\r\n\r\n      try {\r\n        const docRef = doc(db, \"cart\", currentUser.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setCartItems(docSnap.data().items || []);\r\n        } else {\r\n          console.log(\"No cart items found\");\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching cart items:\", e);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, [currentUser]);\r\n\r\n  async function addToCart(product) {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const userName = currentUser.displayName || currentUser.email;\r\n    const newCartItem = { ...product, userName };\r\n\r\n    try {\r\n      const docRef = doc(db, \"cart\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const isAlreadyInCart = existingItems.some(item => item.productId === product.productId);\r\n\r\n        if (isAlreadyInCart) {\r\n          alert(\"This product is already in your cart.\");\r\n          return;\r\n        }\r\n\r\n        const updatedItems = [...existingItems, newCartItem];\r\n\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: updatedItems });\r\n        setCartItems(updatedItems);\r\n      } else {\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: [newCartItem] });\r\n        setCartItems([newCartItem]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding to cart:\", e);\r\n    }\r\n  }\r\n\r\n  async function removeFromCart(productId) {\r\n    try {\r\n      const docRef = doc(db, \"cart\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\r\n\r\n        await setDoc(docRef, { ...docSnap.data(), items: updatedItems });\r\n        setCartItems(updatedItems);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error removing from cart:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCartContext() {\r\n  return useContext(CartContext);\r\n}\r\n\r\nexport default CartContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}