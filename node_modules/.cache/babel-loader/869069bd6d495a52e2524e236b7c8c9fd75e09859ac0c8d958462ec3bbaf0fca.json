{"ast":null,"code":"import { db } from \"../firebase\";\nimport { collection, getDocs, doc, getDoc, addDoc, updateDoc } from \"firebase/firestore\";\nconst collectionName = \"checkout\";\nconst checkoutCollectionRef = collection(db, collectionName);\nclass CheckoutService {\n  constructor() {\n    this.addCheckout = async (newCheckout, userId) => {\n      try {\n        console.log(\"userId passed to checkout: \", userId);\n        const docRef = await addDoc(checkoutCollectionRef, {\n          ...newCheckout,\n          userId\n        });\n        await updateDoc(docRef, {\n          paymentId: docRef.id\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n      } catch (error) {\n        console.error(\"Error adding checkout: \", error);\n      }\n    };\n    this.getAllCheckouts = () => {\n      return getDocs(checkoutCollectionRef);\n    };\n    this.getCheckout = id => {\n      const checkoutDoc = doc(db, collectionName, id);\n      return getDoc(checkoutDoc);\n    };\n  }\n}\nexport default new CheckoutService();","map":{"version":3,"names":["db","collection","getDocs","doc","getDoc","addDoc","updateDoc","collectionName","checkoutCollectionRef","CheckoutService","constructor","addCheckout","newCheckout","userId","console","log","docRef","paymentId","id","error","getAllCheckouts","getCheckout","checkoutDoc"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/context/CheckoutServices.js"],"sourcesContent":["import { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  addDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst collectionName = \"checkout\";\r\nconst checkoutCollectionRef = collection(db, collectionName);\r\n\r\nclass CheckoutService {\r\n  addCheckout = async (newCheckout, userId) => {\r\n    try {\r\n      console.log(\"userId passed to checkout: \", userId);\r\n      const docRef = await addDoc(checkoutCollectionRef, {\r\n        ...newCheckout,\r\n        userId,\r\n      });\r\n  \r\n      await updateDoc(docRef, { paymentId: docRef.id });\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (error) {\r\n      console.error(\"Error adding checkout: \", error);\r\n    }\r\n  };\r\n\r\n\r\n  getAllCheckouts = () => {\r\n    return getDocs(checkoutCollectionRef);\r\n  };\r\n\r\n  getCheckout = (id) => {\r\n    const checkoutDoc = doc(db, collectionName, id);\r\n    return getDoc(checkoutDoc);\r\n  };\r\n}\r\n\r\nexport default new CheckoutService();\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,aAAa;AAChC,SACEC,UAAU,EACVC,OAAO,EACPC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,SAAS,QACJ,oBAAoB;AAE3B,MAAMC,cAAc,GAAG,UAAU;AACjC,MAAMC,qBAAqB,GAAGP,UAAU,CAACD,EAAE,EAAEO,cAAc,CAAC;AAE5D,MAAME,eAAe,CAAC;EAAAC,YAAA;IAAA,KACpBC,WAAW,GAAG,OAAOC,WAAW,EAAEC,MAAM,KAAK;MAC3C,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,MAAM,CAAC;QAClD,MAAMG,MAAM,GAAG,MAAMX,MAAM,CAACG,qBAAqB,EAAE;UACjD,GAAGI,WAAW;UACdC;QACF,CAAC,CAAC;QAEF,MAAMP,SAAS,CAACU,MAAM,EAAE;UAAEC,SAAS,EAAED,MAAM,CAACE;QAAG,CAAC,CAAC;QACjDJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,MAAM,CAACE,EAAE,CAAC;MACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAAA,KAGDC,eAAe,GAAG,MAAM;MACtB,OAAOlB,OAAO,CAACM,qBAAqB,CAAC;IACvC,CAAC;IAAA,KAEDa,WAAW,GAAIH,EAAE,IAAK;MACpB,MAAMI,WAAW,GAAGnB,GAAG,CAACH,EAAE,EAAEO,cAAc,EAAEW,EAAE,CAAC;MAC/C,OAAOd,MAAM,CAACkB,WAAW,CAAC;IAC5B,CAAC;EAAA;AACH;AAEA,eAAe,IAAIb,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}