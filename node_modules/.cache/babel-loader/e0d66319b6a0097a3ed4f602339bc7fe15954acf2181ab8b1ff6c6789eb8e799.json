{"ast":null,"code":"var _jsxFileName = \"D:\\\\studio3project\\\\src\\\\components\\\\CustomerOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\nimport { useProductcontext } from \"../context/Productcontext\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport { db } from \"../firebase\";\nimport { collection, addDoc, query, where, getDocs } from \"firebase/firestore\"; // Import Firestore methods\nimport CustomerHeader from \"./Customerheader\"; // Import header component for customer\nimport HeaderSwitcher from \"./HeaderSwitcher\"; // Import component to switch headers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerOrders = () => {\n  _s();\n  // Access the orders and user data from context\n  const {\n    orders\n  } = useProductcontext(); // Get orders from the product context\n  const {\n    user\n  } = useUserAuth(); // Get authenticated user from context\n\n  // State to hold customer orders and review data\n  const [customerOrders, setCustomerOrders] = useState([]); // Holds fetched orders for the customer\n  const [selectedProductForReview, setSelectedProductForReview] = useState(null); // Selected product to review\n  const [showReviewModal, setShowReviewModal] = useState(false); // Control visibility of review modal\n  const [reviewContent, setReviewContent] = useState(\"\"); // Content of the review\n\n  // Fetch orders from Firestore when the component mounts or user changes\n  useEffect(() => {\n    const fetchOrders = async () => {\n      if (user && user.uid) {\n        try {\n          console.log(\"Fetching orders for user:\", user.uid); // Log the UID for debugging\n\n          // Query Firestore for orders belonging to the logged-in user\n          const ordersQuery = query(collection(db, \"checkout\"), where(\"userId\", \"==\", user.uid) // Filter by the user's UID\n          );\n          const querySnapshot = await getDocs(ordersQuery);\n\n          // Map the fetched documents to a more manageable format\n          const userOrders = querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          console.log(\"Fetched Orders:\", userOrders); // Log fetched orders for debugging\n\n          setCustomerOrders(userOrders); // Save orders to state\n        } catch (error) {\n          console.error(\"Error fetching orders:\", error); // Log any errors during fetch\n        }\n      }\n    };\n    fetchOrders(); // Call the fetch function when component mounts or user changes\n  }, [user]);\n\n  // Handle the review submission\n  const handleSubmitReview = async () => {\n    if (reviewContent.trim()) {\n      try {\n        // Ensure that a product name is available\n        if (!selectedProductForReview || !selectedProductForReview.productName) {\n          console.error(\"Product name is missing from the item:\", selectedProductForReview);\n          alert(\"Cannot submit review: Product name is missing.\");\n          return; // Exit if product name is missing\n        }\n\n        // Add the review to the Firestore collection\n        await addDoc(collection(db, \"reviews\"), {\n          productName: selectedProductForReview.productName,\n          // Include product name in review\n          userId: user.uid,\n          // Include user ID to track who wrote the review\n          content: reviewContent,\n          // The actual review content\n          customerName: user.displayName || user.email,\n          // Get the user's name or email\n          createdAt: new Date() // Timestamp of the review\n        });\n        alert(\"Review submitted successfully!\"); // Notify user of success\n        setReviewContent(\"\"); // Clear review input field\n        setShowReviewModal(false); // Close the modal\n      } catch (error) {\n        console.error(\"Error submitting review:\", error); // Log errors during review submission\n      }\n    }\n  };\n\n  // Set the product to be reviewed and show the review modal\n  const handleLeaveReview = item => {\n    console.log(\"Selected item for review:\", item); // Log the selected item for debugging\n    if (!item.productName) {\n      console.error(\"Product name is missing from the item:\", item);\n      alert(\"Cannot leave a review for this product: Product name is missing.\");\n      return; // Exit if product name is missing\n    }\n    setSelectedProductForReview(item); // Set the product for review\n    setShowReviewModal(true); // Show the review modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: customerOrders.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: customerOrders.map((order, orderIndex) => order.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.productPrice.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.status === \"complete\" && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleLeaveReview(item),\n                children: \"Leave Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)]\n          }, `${order.id}-${item.productName || itemIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) // Message if no orders are available\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showReviewModal,\n      onHide: () => setShowReviewModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Leave a Review for \", selectedProductForReview ? selectedProductForReview.productName : \"Product\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"reviewContent\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              value: reviewContent,\n              onChange: e => setReviewContent(e.target.value),\n              placeholder: \"Write your review here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowReviewModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitReview,\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerOrders, \"4ls2DJ359Zq9rcFA59nrKuV6X+Y=\", false, function () {\n  return [useProductcontext, useUserAuth];\n});\n_c = CustomerOrders;\nexport default CustomerOrders;\nvar _c;\n$RefreshReg$(_c, \"CustomerOrders\");","map":{"version":3,"names":["React","useEffect","useState","Table","Button","Modal","Form","useProductcontext","useUserAuth","db","collection","addDoc","query","where","getDocs","CustomerHeader","HeaderSwitcher","jsxDEV","_jsxDEV","CustomerOrders","_s","orders","user","customerOrders","setCustomerOrders","selectedProductForReview","setSelectedProductForReview","showReviewModal","setShowReviewModal","reviewContent","setReviewContent","fetchOrders","uid","console","log","ordersQuery","querySnapshot","userOrders","docs","map","doc","id","data","error","handleSubmitReview","trim","productName","alert","userId","content","customerName","displayName","email","createdAt","Date","handleLeaveReview","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","striped","bordered","hover","order","orderIndex","items","itemIndex","productPrice","toFixed","status","onClick","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","as","rows","value","onChange","e","target","placeholder","Footer","variant","_c","$RefreshReg$"],"sources":["D:/studio3project/src/components/CustomerOrders.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc, query, where, getDocs } from \"firebase/firestore\"; // Import Firestore methods\r\nimport CustomerHeader from \"./Customerheader\"; // Import header component for customer\r\nimport HeaderSwitcher from \"./HeaderSwitcher\"; // Import component to switch headers\r\n\r\nconst CustomerOrders = () => {\r\n  // Access the orders and user data from context\r\n  const { orders } = useProductcontext(); // Get orders from the product context\r\n  const { user } = useUserAuth(); // Get authenticated user from context\r\n  \r\n  // State to hold customer orders and review data\r\n  const [customerOrders, setCustomerOrders] = useState([]); // Holds fetched orders for the customer\r\n  const [selectedProductForReview, setSelectedProductForReview] = useState(null); // Selected product to review\r\n  const [showReviewModal, setShowReviewModal] = useState(false); // Control visibility of review modal\r\n  const [reviewContent, setReviewContent] = useState(\"\"); // Content of the review\r\n\r\n  // Fetch orders from Firestore when the component mounts or user changes\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      if (user && user.uid) {\r\n        try {\r\n          console.log(\"Fetching orders for user:\", user.uid); // Log the UID for debugging\r\n          \r\n          // Query Firestore for orders belonging to the logged-in user\r\n          const ordersQuery = query(\r\n            collection(db, \"checkout\"),\r\n            where(\"userId\", \"==\", user.uid) // Filter by the user's UID\r\n          );\r\n          const querySnapshot = await getDocs(ordersQuery);\r\n          \r\n          // Map the fetched documents to a more manageable format\r\n          const userOrders = querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          console.log(\"Fetched Orders:\", userOrders); // Log fetched orders for debugging\r\n\r\n          setCustomerOrders(userOrders); // Save orders to state\r\n        } catch (error) {\r\n          console.error(\"Error fetching orders:\", error); // Log any errors during fetch\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchOrders(); // Call the fetch function when component mounts or user changes\r\n  }, [user]);\r\n\r\n  // Handle the review submission\r\n  const handleSubmitReview = async () => {\r\n    if (reviewContent.trim()) {\r\n      try {\r\n        // Ensure that a product name is available\r\n        if (!selectedProductForReview || !selectedProductForReview.productName) {\r\n          console.error(\"Product name is missing from the item:\", selectedProductForReview);\r\n          alert(\"Cannot submit review: Product name is missing.\");\r\n          return; // Exit if product name is missing\r\n        }\r\n\r\n        // Add the review to the Firestore collection\r\n        await addDoc(collection(db, \"reviews\"), {\r\n          productName: selectedProductForReview.productName, // Include product name in review\r\n          userId: user.uid, // Include user ID to track who wrote the review\r\n          content: reviewContent, // The actual review content\r\n          customerName: user.displayName || user.email, // Get the user's name or email\r\n          createdAt: new Date(), // Timestamp of the review\r\n        });\r\n        alert(\"Review submitted successfully!\"); // Notify user of success\r\n        setReviewContent(\"\"); // Clear review input field\r\n        setShowReviewModal(false); // Close the modal\r\n      } catch (error) {\r\n        console.error(\"Error submitting review:\", error); // Log errors during review submission\r\n      }\r\n    }\r\n  };\r\n\r\n  // Set the product to be reviewed and show the review modal\r\n  const handleLeaveReview = (item) => {\r\n    console.log(\"Selected item for review:\", item); // Log the selected item for debugging\r\n    if (!item.productName) {\r\n      console.error(\"Product name is missing from the item:\", item);\r\n      alert(\"Cannot leave a review for this product: Product name is missing.\");\r\n      return; // Exit if product name is missing\r\n    }\r\n\r\n    setSelectedProductForReview(item); // Set the product for review\r\n    setShowReviewModal(true); // Show the review modal\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <HeaderSwitcher /> {/* Switch header based on user context */}\r\n      <h2>My Orders</h2>\r\n      <div className=\"table-container\">\r\n        {/* Display orders in a table format */}\r\n        {customerOrders.length > 0 ? (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customerOrders.map((order, orderIndex) =>\r\n                order.items.map((item, itemIndex) => (\r\n                  <tr key={`${order.id}-${item.productName || itemIndex}`}> {/* Key for each row */}\r\n                    <td>{order.id}</td>\r\n                    <td>{item.productName}</td>\r\n                    <td>{item.productPrice.toFixed(2)}</td>\r\n                    <td>{order.status}</td>\r\n                    \r\n                    <td>\r\n                      {/* Show 'Leave Review' button if the order is complete */}\r\n                      {order.status === \"complete\" && (\r\n                        <Button onClick={() => handleLeaveReview(item)}>\r\n                          Leave Review\r\n                        </Button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <p>No orders found.</p> // Message if no orders are available\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for submitting a review */}\r\n      <Modal show={showReviewModal} onHide={() => setShowReviewModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Leave a Review for {selectedProductForReview ? selectedProductForReview.productName : \"Product\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"reviewContent\">\r\n              <Form.Label>Review</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={reviewContent}\r\n                onChange={(e) => setReviewContent(e.target.value)}\r\n                placeholder=\"Write your review here...\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowReviewModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmitReview}>\r\n            Submit Review\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}