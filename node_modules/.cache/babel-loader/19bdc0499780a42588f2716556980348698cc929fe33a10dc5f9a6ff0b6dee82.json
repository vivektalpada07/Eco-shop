{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemko\\\\OneDrive - Otago Polytechnic\\\\01_Courses\\\\10_Studio_03\\\\03_Others\\\\Eco-shop\\\\src\\\\context\\\\Productcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { collection, getDocs, addDoc, deleteDoc, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport function ProductContextProvider({\n  children\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Fetch products and orders from Firestore\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"products\"));\n        const productsArray = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          // Firestore document ID as the unique product ID\n          ...doc.data()\n        }));\n        console.log(\"Fetched Products:\", productsArray);\n        setProducts(productsArray);\n      } catch (e) {\n        console.error(\"Error fetching products:\", e);\n      }\n    };\n    const fetchOrders = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"checkout\"));\n        const ordersArray = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setOrders(ordersArray);\n      } catch (e) {\n        console.error(\"Error fetching orders:\", e);\n      }\n    };\n    fetchProducts();\n    fetchOrders();\n  }, []);\n\n  // Add a new product\n  async function addProduct(product) {\n    try {\n      const docRef = await addDoc(collection(db, \"products\"), product); // Add product to Firestore\n      const newProduct = {\n        id: docRef.id,\n        // Firestore document ID is used as the unique product ID\n        ...product\n      };\n      setProducts(prevProducts => [...prevProducts, newProduct]);\n    } catch (e) {\n      console.error(\"Error adding product:\", e);\n    }\n  }\n\n  // Update product\n  function updateProduct(productId, updatedProduct) {\n    setProducts(prevProducts => prevProducts.map(product => product.id === productId ? {\n      ...product,\n      ...updatedProduct\n    } : product));\n  }\n\n  // Delete product by productId\n  async function deleteProduct(productId) {\n    try {\n      await deleteDoc(doc(db, \"products\", productId)); // Delete product from Firestore\n      setProducts(prevProducts => prevProducts.filter(product => product.id !== productId));\n    } catch (e) {\n      console.error(\"Error deleting product:\", e);\n    }\n  }\n\n  // Update order status by orderId\n  async function updateOrderStatus(orderId, status) {\n    try {\n      const orderRef = doc(db, \"checkout\", orderId);\n      await updateDoc(orderRef, {\n        status\n      });\n      setOrders(prevOrders => prevOrders.map(order => order.id === orderId ? {\n        ...order,\n        status\n      } : order));\n    } catch (e) {\n      console.error(\"Error updating order status:\", e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      orders,\n      updateOrderStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n// Hook to use the Product context\n_s(ProductContextProvider, \"MxerPWX5Mh/lcOOOzChUb6Q1wTY=\");\n_c = ProductContextProvider;\nexport function useProductcontext() {\n  _s2();\n  return useContext(ProductContext);\n}\n_s2(useProductcontext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","collection","getDocs","addDoc","deleteDoc","doc","updateDoc","db","jsxDEV","_jsxDEV","ProductContext","ProductContextProvider","children","_s","products","setProducts","orders","setOrders","fetchProducts","querySnapshot","productsArray","docs","map","id","data","console","log","e","error","fetchOrders","ordersArray","addProduct","product","docRef","newProduct","prevProducts","updateProduct","productId","updatedProduct","deleteProduct","filter","updateOrderStatus","orderId","status","orderRef","prevOrders","order","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProductcontext","_s2","$RefreshReg$"],"sources":["C:/Users/hemko/OneDrive - Otago Polytechnic/01_Courses/10_Studio_03/03_Others/Eco-shop/src/context/Productcontext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, getDocs, addDoc, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst ProductContext = createContext();\r\n\r\nexport function ProductContextProvider({ children }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Fetch products and orders from Firestore\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"products\"));\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id, // Firestore document ID as the unique product ID\r\n          ...doc.data()\r\n        }));\r\n        console.log(\"Fetched Products:\", productsArray);\r\n        setProducts(productsArray);\r\n      } catch (e) {\r\n        console.error(\"Error fetching products:\", e);\r\n      }\r\n    };\r\n\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"checkout\"));\r\n        const ordersArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setOrders(ordersArray);\r\n      } catch (e) {\r\n        console.error(\"Error fetching orders:\", e);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  // Add a new product\r\n  async function addProduct(product) {\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"products\"), product); // Add product to Firestore\r\n      const newProduct = {\r\n        id: docRef.id, // Firestore document ID is used as the unique product ID\r\n        ...product,\r\n      };\r\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n    } catch (e) {\r\n      console.error(\"Error adding product:\", e);\r\n    }\r\n  }\r\n\r\n  // Update product\r\n  function updateProduct(productId, updatedProduct) {\r\n    setProducts((prevProducts) =>\r\n      prevProducts.map((product) =>\r\n        product.id === productId ? { ...product, ...updatedProduct } : product\r\n      )\r\n    );\r\n  }\r\n\r\n  // Delete product by productId\r\n  async function deleteProduct(productId) {\r\n    try {\r\n      await deleteDoc(doc(db, \"products\", productId)); // Delete product from Firestore\r\n      setProducts((prevProducts) =>\r\n        prevProducts.filter((product) => product.id !== productId)\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error deleting product:\", e);\r\n    }\r\n  }\r\n\r\n  // Update order status by orderId\r\n  async function updateOrderStatus(orderId, status) {\r\n    try {\r\n      const orderRef = doc(db, \"checkout\", orderId);\r\n      await updateDoc(orderRef, { status });\r\n      setOrders((prevOrders) =>\r\n        prevOrders.map((order) =>\r\n          order.id === orderId ? { ...order, status } : order\r\n        )\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error updating order status:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{ products, addProduct, updateProduct, deleteProduct, orders, updateOrderStatus }}\r\n    >\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook to use the Product context\r\nexport function useProductcontext() {\r\n  return useContext(ProductContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}